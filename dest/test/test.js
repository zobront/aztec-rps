import { RPSContract } from '../artifacts/RPS.js';
import { createPXEClient, getSandboxAccountsWallets, waitForSandbox, } from '@aztec/aztec.js';
const setupSandbox = async () => {
    const { PXE_URL = 'http://localhost:8080' } = process.env;
    const pxe = createPXEClient(PXE_URL);
    await waitForSandbox(pxe);
    return pxe;
};
function delay(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}
describe('ZK Contract Tests', async () => {
    let owner;
    let _account2;
    let _account3;
    let testAddress;
    let contractAddress;
    let pxe;
    let cc;
    async function getTest(wallet, address) {
        return RPSContract.at(address, wallet);
    }
    describe('Setup', async () => {
        it('Init sandbox', async () => {
            pxe = await setupSandbox();
            [owner, _account2, _account3] = await getSandboxAccountsWallets(pxe);
            const [a] = await pxe.getRegisteredAccounts();
            console.log(owner.getAddress().toString(), a.address.toString());
        });
        it('Deploy test', async function () {
            const test = await RPSContract.deploy(pxe).send().deployed();
            testAddress = test.address;
            console.log(testAddress.toString());
        });
    });
    describe('Test', async () => {
        it('Testing', async () => {
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90ZXN0L3Rlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFBO0FBQ2pELE9BQU8sRUFPTCxlQUFlLEVBQ1gseUJBQXlCLEVBRzdCLGNBQWMsR0FFZixNQUFNLGlCQUFpQixDQUFBO0FBR3hCLE1BQU0sWUFBWSxHQUFHLEtBQUssSUFBSSxFQUFFO0lBQzlCLE1BQU0sRUFBRSxPQUFPLEdBQUcsdUJBQXVCLEVBQUUsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFBO0lBQ3pELE1BQU0sR0FBRyxHQUFHLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQTtJQUNwQyxNQUFNLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUN6QixPQUFPLEdBQUcsQ0FBQTtBQUNaLENBQUMsQ0FBQTtBQUdELFNBQVMsS0FBSyxDQUFDLEVBQVU7SUFDdkIsT0FBTyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUN6RCxDQUFDO0FBR0QsUUFBUSxDQUFDLG1CQUFtQixFQUFFLEtBQUssSUFBSSxFQUFFO0lBQ3ZDLElBQUksS0FBa0MsQ0FBQTtJQUN0QyxJQUFJLFNBQXNDLENBQUE7SUFDMUMsSUFBSSxTQUFzQyxDQUFBO0lBQzFDLElBQUksV0FBeUIsQ0FBQTtJQUM3QixJQUFJLGVBQTZCLENBQUE7SUFDakMsSUFBSSxHQUFRLENBQUM7SUFDYixJQUFJLEVBQWMsQ0FBQTtJQUVsQixLQUFLLFVBQVUsT0FBTyxDQUFDLE1BQW1DLEVBQUUsT0FBcUI7UUFDL0UsT0FBTyxXQUFXLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRUQsUUFBUSxDQUFDLE9BQU8sRUFBRSxLQUFLLElBQUksRUFBRTtRQUMzQixFQUFFLENBQUMsY0FBYyxFQUFFLEtBQUssSUFBSSxFQUFFO1lBQzVCLEdBQUcsR0FBRyxNQUFNLFlBQVksRUFBRSxDQUFDO1lBQzNCLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUMsR0FBRyxNQUFNLHlCQUF5QixDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JFLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLEdBQUcsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1lBQzlDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUNuRSxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyxhQUFhLEVBQUUsS0FBSztZQUNyQixNQUFNLElBQUksR0FBRyxNQUFNLFdBQVcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDN0QsV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDM0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQTtRQUNyQyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0lBRUgsUUFBUSxDQUFDLE1BQU0sRUFBRSxLQUFLLElBQUksRUFBRTtRQUMxQixFQUFFLENBQUMsU0FBUyxFQUFFLEtBQUssSUFBSSxFQUFFO1FBQ3pCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyJ9